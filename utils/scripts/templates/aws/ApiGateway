Parameters:
  App:
    Type: String
    Description: Your application's name deployed using Copilot.
  Env:
    Type: String
    Description: The name of the ECS environment deployed using Copilot.
  Name:
    Type: String
    Description: The name of the ECS service deployed using Copilot.

Resources:
  TasksServiceHttpApi:
    Type: 'AWS::ApiGatewayV2::Api'
    Properties:
      Name: !Sub '${App}-${Name}-gw-${Env}'
      Description: 'The API Gateway for the Tasks Service.'
      ProtocolType: HTTP
      Version: 'v1'
      CorsConfiguration:
        AllowHeaders:
          - 'Content-Type'
          - 'Authorization'
          - 'Accept'
        AllowMethods:
          - OPTIONS
          - GET
          - POST
          - PUT
          - DELETE
        AllowOrigins:
          - '*'
        ExposeHeaders:
          - 'Date'
        MaxAge: 172800

  TasksServiceVpcLink:
    Type: 'AWS::ApiGatewayV2::VpcLink'
    Properties:
      Name: !Sub '${App}-${Name}-${Env}-vpc-link'
      SubnetIds:
        !Split [ ',', { 'Fn::ImportValue': !Sub '${App}-${Env}-PrivateSubnets' } ]
      SecurityGroupIds:
        - Fn::ImportValue:
            !Sub '${App}-${Env}-EnvironmentSecurityGroup'

  TasksServiceHttpApiIntegration:
    Type: 'AWS::ApiGatewayV2::Integration'
    Properties:
      ApiId: !Ref TasksServiceHttpApi
      Description: 'HTTP proxy integration for Tasks Service API Gateway.'
      IntegrationType: HTTP_PROXY
      IntegrationMethod: ANY
      ConnectionType: VPC_LINK
      ConnectionId: !Ref TasksServiceVpcLink
      IntegrationUri:
        Fn::ImportValue:
        # !Sub '${App}-${Env}-${Name}-DiscoveryServiceARN' to access the Tasks Services without the Load Balancer.
          !Sub '${App}-${Env}-InternalHTTPListenerArn'
      PayloadFormatVersion: '1.0'

  TasksServiceHttpApiDefaultRoute:
    Type: 'AWS::ApiGatewayV2::Route'
    Properties:
      ApiId: !Ref TasksServiceHttpApi
      RouteKey: '$default'
      Target: !Join
        - /
        - - integrations
          - !Ref TasksServiceHttpApiIntegration

  TasksServiceHttpApiLogGroup:
    Type: 'AWS::Logs::LogGroup'
    Properties:
      RetentionInDays: 7
      LogGroupName: !Join
        - '-'
        - - !Ref TasksServiceHttpApi
          - access-logs
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain

  TasksServiceHttpApiStage:
    Type: 'AWS::ApiGatewayV2::Stage'
    Properties:
      StageName: '$default'
      Description: 'Development stage for Tasks Service API Gateway.'
      AutoDeploy: true
      ApiId: !Ref TasksServiceHttpApi
      AccessLogSettings:
        DestinationArn: !GetAtt TasksServiceHttpApiLogGroup.Arn
        Format: >-
          $context.identity.sourceIp - - [$context.requestTime]
          "$context.httpMethod $context.routeKey $context.protocol"
          $context.status $context.responseLength $context.requestId
          $context.integrationErrorMessage

Outputs:
  TasksServiceHttpApiId:
    Value: !Ref TasksServiceHttpApi
    Export:
      Name: !Sub '${App}-${Name}-gw-${Env}-id'
  TasksServiceHttpApiInvokeURL:
    Value: !Sub 'https://${TasksServiceHttpApi}.execute-api.${AWS::Region}.amazonaws.com'
    Export:
      Name: !Sub '${App}-${Name}-gw-${Env}-endpoint'
