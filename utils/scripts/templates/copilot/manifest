# The manifest for the "api" service.
# Read the full specification for the "Load Balanced Web Service" type at:
#  https://aws.github.io/copilot-cli/docs/manifest/lb-web-service/

# Your service name will be used in naming your resources like log groups, ECS services, etc.
name: api
type: 'Load Balanced Web Service'

# Configuration for your containers and service.
# Docker build arguments. For additional overrides: https://aws.github.io/copilot-cli/docs/manifest/backend-service/#image-build
# All paths are relative to your workspace root.
image:
  build:
    context: ./src/hiperium-city-tasks-api
    dockerfile: ./src/hiperium-city-tasks-api/Dockerfile
  port: 8080

cpu: 256                  # Number of CPU units for the task.
memory: 512               # Amount of memory in MiB used by the task.
platform: linux/x86_64    # See https://aws.github.io/copilot-cli/docs/manifest/backend-service/#platform
exec: true                # Enable running commands in your container.
count:                    # Number of tasks that should be running in your service.
  range: 1-2
  cooldown:
    in: 30s
    out: 60s
  cpu_percentage: 70
  memory_percentage:
    value: 80
    cooldown:
      in: 80s
      out: 160s
  requests: 1000
  response_time: 2s

# The value must be one of 'public' or 'private'. Defaults to launching your tasks in public subnets.
# See https://aws.github.io/copilot-cli/docs/manifest/backend-service/#network
network:
  vpc:
    placement: 'private'

# Distribute traffic to your service.
http:
  path: '/'
  healthcheck:
    path: '/q/health/live'
    port: 8080
    success_codes: '200,301'
    healthy_threshold: 3
    unhealthy_threshold: 2
    interval: 15s
    timeout: 10s
    grace_period: 30s
  deregistration_delay: 50s
  stickiness: true

# Pass environment variables as key value pairs to ECS containers.
variables:
  TIME_ZONE_ID: -05:00
  QUARKUS_OIDC_AUTH_SERVER_URL: https://cognito-idp.aws_region.amazonaws.com/cognito_user_pool_id_pre

# Lets you override any value in the manifest based on the environment we're in.
environments:
  dev:
    image:
      build:
        args:
          quarkus_profile: dev
    deployment:
      rolling: 'recreate'

  # TEST environment.
  test:
    image:
      build:
        args:
          quarkus_profile: test
    deployment:
      rolling: 'recreate'

  # PRODUCTION environment.
  prod:
    image:
      build:
        args:
          quarkus_profile: prod
    variables:
      QUARKUS_OIDC_AUTH_SERVER_URL: https://cognito-idp.aws_region.amazonaws.com/cognito_user_pool_id_prod
    deployment:
      rolling: 'recreate'
